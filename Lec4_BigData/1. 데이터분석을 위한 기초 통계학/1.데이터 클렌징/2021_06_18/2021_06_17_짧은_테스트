{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"2021_06_17_짧은_테스트","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNdc35wAlCNnLmZDM1yo4Vr"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"6_pX2rKD7i8g","executionInfo":{"status":"ok","timestamp":1623916464132,"user_tz":-540,"elapsed":452,"user":{"displayName":"조현기","photoUrl":"","userId":"02064242295340458415"}}},"source":["from google.colab import drive\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7LU8gshs7-Ap","executionInfo":{"status":"ok","timestamp":1623916071046,"user_tz":-540,"elapsed":23096,"user":{"displayName":"조현기","photoUrl":"","userId":"02064242295340458415"}},"outputId":"9f54d45a-d06e-452e-f242-3990d3e73600"},"source":["drive.mount('/content/drive')"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":142},"id":"oKRFIxZJ8Cmn","executionInfo":{"status":"ok","timestamp":1623916121676,"user_tz":-540,"elapsed":623,"user":{"displayName":"조현기","photoUrl":"","userId":"02064242295340458415"}},"outputId":"55f1cd92-940f-470f-95c7-acf410942a41"},"source":["df = pd.read_csv(\"/content/drive/MyDrive/Colab Notebooks/Lec4_BigData/1. 데이터분석을 위한 기초 통계학/1.데이터 클렌징/data/data.csv\")\n","df.head(3)"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>class</th>\n","      <th>cty</th>\n","      <th>hwy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>compact</td>\n","      <td>18.0</td>\n","      <td>29.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>compact</td>\n","      <td>21.0</td>\n","      <td>29.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>compact</td>\n","      <td>NaN</td>\n","      <td>31.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     class   cty   hwy\n","0  compact  18.0  29.0\n","1  compact  21.0  29.0\n","2  compact   NaN  31.0"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J5_A_zxQ8YmH","executionInfo":{"status":"ok","timestamp":1623916149105,"user_tz":-540,"elapsed":559,"user":{"displayName":"조현기","photoUrl":"","userId":"02064242295340458415"}},"outputId":"038e6027-bd76-4e66-8053-a8359fa82498"},"source":["df.shape"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(234, 3)"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RdEVK2xo8fN4","executionInfo":{"status":"ok","timestamp":1623916157636,"user_tz":-540,"elapsed":437,"user":{"displayName":"조현기","photoUrl":"","userId":"02064242295340458415"}},"outputId":"80a3845d-0453-438c-b052-0ad5f30caefc"},"source":["df.info"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method DataFrame.info of        class    cty   hwy\n","0    compact   18.0  29.0\n","1    compact   21.0  29.0\n","2    compact    NaN  31.0\n","3    compact   21.0  30.0\n","4    compact   16.0  26.0\n","..       ...    ...   ...\n","229  midsize   19.0  28.0\n","230  midsize  999.0  29.0\n","231  midsize   16.0  26.0\n","232  midsize   18.0  26.0\n","233      NaN   17.0  26.0\n","\n","[234 rows x 3 columns]>"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"389OADN_8gQf","executionInfo":{"status":"ok","timestamp":1623916166739,"user_tz":-540,"elapsed":7,"user":{"displayName":"조현기","photoUrl":"","userId":"02064242295340458415"}},"outputId":"51f992b3-e336-4416-baaf-0476164f71fa"},"source":["df.describe()"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>cty</th>\n","      <th>hwy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>226.000000</td>\n","      <td>229.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>29.588496</td>\n","      <td>115.135371</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>112.855084</td>\n","      <td>932.040957</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>-50.000000</td>\n","      <td>12.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>14.000000</td>\n","      <td>18.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>17.000000</td>\n","      <td>25.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>19.000000</td>\n","      <td>28.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>999.000000</td>\n","      <td>9999.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              cty          hwy\n","count  226.000000   229.000000\n","mean    29.588496   115.135371\n","std    112.855084   932.040957\n","min    -50.000000    12.000000\n","25%     14.000000    18.000000\n","50%     17.000000    25.000000\n","75%     19.000000    28.000000\n","max    999.000000  9999.000000"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"markdown","metadata":{"id":"KvWZzZRU-Ye1"},"source":["#1. 이상값 ㅈㅣ우기"]},{"cell_type":"markdown","metadata":{"id":"cIkV74jx-cSO"},"source":["##1.1 사분위수 얻기"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JUQwN66j-qJf","executionInfo":{"status":"ok","timestamp":1623917624250,"user_tz":-540,"elapsed":518,"user":{"displayName":"조현기","photoUrl":"","userId":"02064242295340458415"}},"outputId":"b4731338-ba6a-4edf-ee07-16ada7514f14"},"source":["#cty사분위수 얻기\n","cty_q1 = df['cty'].describe().loc['25%']\n","cty_q3 = df['cty'].describe().loc['75%']\n","cty_median = df['cty'].describe().loc['50%']\n","\n","cty_IQR = cty_q3 - cty_q1\n","cty_lower = cty_q1 - cty_IQR*1.5\n","cty_upper = cty_q3 + cty_IQR*3\n","\n","\n","#hwy사분위수 얻기\n","hwy_q1 = df['hwy'].describe().loc['25%']\n","hwy_q3 = df['hwy'].describe().loc['75%']\n","hwy_median = df['hwy'].describe().loc['50%']\n","\n","hwy_IQR = hwy_q3 - hwy_q1\n","hwy_lower = hwy_q1 - hwy_IQR*1.5\n","hwy_upper = hwy_q3 + hwy_IQR*3\n","\n","\n","#cty 사분위수\n","print(\"cty_q1: \", cty_q1, \", cty_q3: \", cty_q3, \", cty_median\", cty_median)\n","print(\"cty_IQR: \", cty_IQR, \", cty_lower: \", cty_lower, \", cty_upper\", cty_upper)\n","\n","\n","#hwy 사분위수\n","print(\"hwy_q1: \", hwy_q1, \", hwy_q3: \", hwy_q3, \", hwy_median\", hwy_median)\n","print(\"hwy_IQR: \", hwy_IQR, \", hwy_lower: \", hwy_lower, \", hwy_upper\", hwy_upper)"],"execution_count":21,"outputs":[{"output_type":"stream","text":["cty_q1:  14.0 , cty_q3:  19.0 , cty_median 17.0\n","cty_IQR:  5.0 , cty_lower:  6.5 , cty_upper 34.0\n","hwy_q1:  18.0 , hwy_q3:  28.0 , hwy_median 25.0\n","hwy_IQR:  10.0 , hwy_lower:  3.0 , hwy_upper 58.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":599},"id":"tf_-h6DcA8W2","executionInfo":{"status":"ok","timestamp":1623918082029,"user_tz":-540,"elapsed":636,"user":{"displayName":"조현기","photoUrl":"","userId":"02064242295340458415"}},"outputId":"c0e36be2-8db6-4515-c3b6-f394d57a62d4"},"source":["#카피해서 새로운 df만들어줌\n","df_remove = df.copy()\n","\n","#csv파일을 봤을때 999와 같은 이상치가 있어도 hwy값은 이상치가 아니기 때문에 중앙값으로 치환하도록 한다.\n","#df_remove[(df_remove['cty'] < cty_lower) | (df_remove['cty'] > cty_upper)].cty = cty_median\n","df_remove.cty[(df_remove['cty'] < cty_lower) | (df_remove['cty'] > cty_upper)] = cty_median\n","\n","#df_remove[(df_remove['hwy'] < hwy_lower) | (df_remove['hwy'] > hwy_upper)].hwy = hwy_median\n","df_remove.hwy[(df_remove['hwy'] < hwy_lower) | (df_remove['hwy'] > hwy_upper)] = hwy_median\n","df_remove"],"execution_count":31,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:9: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  if __name__ == '__main__':\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>class</th>\n","      <th>cty</th>\n","      <th>hwy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>compact</td>\n","      <td>18.0</td>\n","      <td>29.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>compact</td>\n","      <td>21.0</td>\n","      <td>29.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>compact</td>\n","      <td>NaN</td>\n","      <td>31.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>compact</td>\n","      <td>21.0</td>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>compact</td>\n","      <td>16.0</td>\n","      <td>26.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>229</th>\n","      <td>midsize</td>\n","      <td>19.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>230</th>\n","      <td>midsize</td>\n","      <td>17.0</td>\n","      <td>29.0</td>\n","    </tr>\n","    <tr>\n","      <th>231</th>\n","      <td>midsize</td>\n","      <td>16.0</td>\n","      <td>26.0</td>\n","    </tr>\n","    <tr>\n","      <th>232</th>\n","      <td>midsize</td>\n","      <td>18.0</td>\n","      <td>26.0</td>\n","    </tr>\n","    <tr>\n","      <th>233</th>\n","      <td>NaN</td>\n","      <td>17.0</td>\n","      <td>26.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>234 rows × 3 columns</p>\n","</div>"],"text/plain":["       class   cty   hwy\n","0    compact  18.0  29.0\n","1    compact  21.0  29.0\n","2    compact   NaN  31.0\n","3    compact  21.0  30.0\n","4    compact  16.0  26.0\n","..       ...   ...   ...\n","229  midsize  19.0  28.0\n","230  midsize  17.0  29.0\n","231  midsize  16.0  26.0\n","232  midsize  18.0  26.0\n","233      NaN  17.0  26.0\n","\n","[234 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":31}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"Qb-3kK9u-SqN","executionInfo":{"status":"ok","timestamp":1623918177562,"user_tz":-540,"elapsed":622,"user":{"displayName":"조현기","photoUrl":"","userId":"02064242295340458415"}},"outputId":"39e9fe51-dfcb-49b0-f1f7-114beb769371"},"source":["df_remove.describe()"],"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>cty</th>\n","      <th>hwy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>226.000000</td>\n","      <td>229.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>16.769912</td>\n","      <td>23.449782</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>4.043121</td>\n","      <td>5.963586</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>9.000000</td>\n","      <td>12.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>14.000000</td>\n","      <td>18.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>17.000000</td>\n","      <td>25.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>19.000000</td>\n","      <td>27.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>33.000000</td>\n","      <td>44.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              cty         hwy\n","count  226.000000  229.000000\n","mean    16.769912   23.449782\n","std      4.043121    5.963586\n","min      9.000000   12.000000\n","25%     14.000000   18.000000\n","50%     17.000000   25.000000\n","75%     19.000000   27.000000\n","max     33.000000   44.000000"]},"metadata":{"tags":[]},"execution_count":35}]},{"cell_type":"code","metadata":{"id":"pZfkyIk3ELYG"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"IG5jjODpFR8i"},"source":["#2. 결측치 채우기\n","차종별로 평균값으로 채워보자"]},{"cell_type":"markdown","metadata":{"id":"YoBeAcE4FW_6"},"source":["##2.1 cty, hwy"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"pGgCzerzFVeY","executionInfo":{"status":"ok","timestamp":1623918642095,"user_tz":-540,"elapsed":446,"user":{"displayName":"조현기","photoUrl":"","userId":"02064242295340458415"}},"outputId":"f89aa8e0-2d24-4001-923d-74e4db038653"},"source":["df_remove[df_remove['cty'].isna()]"],"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>class</th>\n","      <th>cty</th>\n","      <th>hwy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>compact</td>\n","      <td>NaN</td>\n","      <td>31.0</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>suv</td>\n","      <td>NaN</td>\n","      <td>20.0</td>\n","    </tr>\n","    <tr>\n","      <th>58</th>\n","      <td>suv</td>\n","      <td>NaN</td>\n","      <td>17.0</td>\n","    </tr>\n","    <tr>\n","      <th>93</th>\n","      <td>subcompact</td>\n","      <td>NaN</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>100</th>\n","      <td>subcompact</td>\n","      <td>NaN</td>\n","      <td>32.0</td>\n","    </tr>\n","    <tr>\n","      <th>137</th>\n","      <td>suv</td>\n","      <td>NaN</td>\n","      <td>17.0</td>\n","    </tr>\n","    <tr>\n","      <th>192</th>\n","      <td>compact</td>\n","      <td>NaN</td>\n","      <td>27.0</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>suv</td>\n","      <td>NaN</td>\n","      <td>18.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["          class  cty   hwy\n","2       compact  NaN  31.0\n","20          suv  NaN  20.0\n","58          suv  NaN  17.0\n","93   subcompact  NaN  24.0\n","100  subcompact  NaN  32.0\n","137         suv  NaN  17.0\n","192     compact  NaN  27.0\n","199         suv  NaN  18.0"]},"metadata":{"tags":[]},"execution_count":36}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"gzNjQt_1F_-W","executionInfo":{"status":"ok","timestamp":1623918748987,"user_tz":-540,"elapsed":449,"user":{"displayName":"조현기","photoUrl":"","userId":"02064242295340458415"}},"outputId":"5b9335c4-6710-424d-ebac-d41f6481f502"},"source":["df_remove[df_remove['hwy'].isna()]"],"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>class</th>\n","      <th>cty</th>\n","      <th>hwy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6</th>\n","      <td>compact</td>\n","      <td>18.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>158</th>\n","      <td>midsize</td>\n","      <td>16.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>193</th>\n","      <td>compact</td>\n","      <td>24.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>202</th>\n","      <td>pickup</td>\n","      <td>17.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>compact</td>\n","      <td>17.0</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       class   cty  hwy\n","6    compact  18.0  NaN\n","158  midsize  16.0  NaN\n","193  compact  24.0  NaN\n","202   pickup  17.0  NaN\n","211  compact  17.0  NaN"]},"metadata":{"tags":[]},"execution_count":37}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":328},"id":"nQ7UA8ZEGZ-3","executionInfo":{"status":"ok","timestamp":1623919220178,"user_tz":-540,"elapsed":443,"user":{"displayName":"조현기","photoUrl":"","userId":"02064242295340458415"}},"outputId":"9d78e318-4d39-4d0e-c3de-f3ee0446c46a"},"source":["#차종별 describe()\n","df_remove.groupby('class').describe()"],"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th></th>\n","      <th colspan=\"8\" halign=\"left\">cty</th>\n","      <th colspan=\"8\" halign=\"left\">hwy</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","    <tr>\n","      <th>class</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2seater</th>\n","      <td>5.0</td>\n","      <td>15.400000</td>\n","      <td>0.547723</td>\n","      <td>15.0</td>\n","      <td>15.0</td>\n","      <td>15.0</td>\n","      <td>16.0</td>\n","      <td>16.0</td>\n","      <td>5.0</td>\n","      <td>24.800000</td>\n","      <td>1.303840</td>\n","      <td>23.0</td>\n","      <td>24.0</td>\n","      <td>25.0</td>\n","      <td>26.00</td>\n","      <td>26.0</td>\n","    </tr>\n","    <tr>\n","      <th>compact</th>\n","      <td>43.0</td>\n","      <td>20.000000</td>\n","      <td>2.803060</td>\n","      <td>15.0</td>\n","      <td>18.0</td>\n","      <td>20.0</td>\n","      <td>21.0</td>\n","      <td>28.0</td>\n","      <td>42.0</td>\n","      <td>28.023810</td>\n","      <td>3.080134</td>\n","      <td>23.0</td>\n","      <td>26.0</td>\n","      <td>27.5</td>\n","      <td>29.00</td>\n","      <td>37.0</td>\n","    </tr>\n","    <tr>\n","      <th>midsize</th>\n","      <td>38.0</td>\n","      <td>18.631579</td>\n","      <td>1.909026</td>\n","      <td>15.0</td>\n","      <td>18.0</td>\n","      <td>18.0</td>\n","      <td>19.0</td>\n","      <td>23.0</td>\n","      <td>37.0</td>\n","      <td>27.351351</td>\n","      <td>2.150145</td>\n","      <td>23.0</td>\n","      <td>26.0</td>\n","      <td>27.0</td>\n","      <td>29.00</td>\n","      <td>32.0</td>\n","    </tr>\n","    <tr>\n","      <th>minivan</th>\n","      <td>11.0</td>\n","      <td>15.818182</td>\n","      <td>1.834022</td>\n","      <td>11.0</td>\n","      <td>15.5</td>\n","      <td>16.0</td>\n","      <td>17.0</td>\n","      <td>18.0</td>\n","      <td>11.0</td>\n","      <td>22.363636</td>\n","      <td>2.062655</td>\n","      <td>17.0</td>\n","      <td>22.0</td>\n","      <td>23.0</td>\n","      <td>24.00</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>pickup</th>\n","      <td>31.0</td>\n","      <td>13.193548</td>\n","      <td>1.939405</td>\n","      <td>9.0</td>\n","      <td>12.0</td>\n","      <td>13.0</td>\n","      <td>14.5</td>\n","      <td>17.0</td>\n","      <td>30.0</td>\n","      <td>17.200000</td>\n","      <td>2.455114</td>\n","      <td>12.0</td>\n","      <td>16.0</td>\n","      <td>17.0</td>\n","      <td>18.75</td>\n","      <td>25.0</td>\n","    </tr>\n","    <tr>\n","      <th>subcompact</th>\n","      <td>33.0</td>\n","      <td>19.636364</td>\n","      <td>3.814595</td>\n","      <td>14.0</td>\n","      <td>17.0</td>\n","      <td>19.0</td>\n","      <td>21.0</td>\n","      <td>29.0</td>\n","      <td>35.0</td>\n","      <td>28.142857</td>\n","      <td>5.375012</td>\n","      <td>20.0</td>\n","      <td>24.5</td>\n","      <td>26.0</td>\n","      <td>30.50</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>suv</th>\n","      <td>50.0</td>\n","      <td>13.660000</td>\n","      <td>2.638877</td>\n","      <td>9.0</td>\n","      <td>12.0</td>\n","      <td>13.0</td>\n","      <td>15.0</td>\n","      <td>20.0</td>\n","      <td>54.0</td>\n","      <td>18.296296</td>\n","      <td>3.283059</td>\n","      <td>12.0</td>\n","      <td>17.0</td>\n","      <td>18.0</td>\n","      <td>19.00</td>\n","      <td>27.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             cty                             ...   hwy                   \n","           count       mean       std   min  ...   25%   50%    75%   max\n","class                                        ...                         \n","2seater      5.0  15.400000  0.547723  15.0  ...  24.0  25.0  26.00  26.0\n","compact     43.0  20.000000  2.803060  15.0  ...  26.0  27.5  29.00  37.0\n","midsize     38.0  18.631579  1.909026  15.0  ...  26.0  27.0  29.00  32.0\n","minivan     11.0  15.818182  1.834022  11.0  ...  22.0  23.0  24.00  24.0\n","pickup      31.0  13.193548  1.939405   9.0  ...  16.0  17.0  18.75  25.0\n","subcompact  33.0  19.636364  3.814595  14.0  ...  24.5  26.0  30.50  44.0\n","suv         50.0  13.660000  2.638877   9.0  ...  17.0  18.0  19.00  27.0\n","\n","[7 rows x 16 columns]"]},"metadata":{"tags":[]},"execution_count":48}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LENVHlxVGn4u","executionInfo":{"status":"ok","timestamp":1623919386273,"user_tz":-540,"elapsed":430,"user":{"displayName":"조현기","photoUrl":"","userId":"02064242295340458415"}},"outputId":"672dda69-9e00-4434-ffbc-a41cb7d91583"},"source":["#도로별, 차종별 평균값찾는법\n","df_remove.groupby('class').describe()['cty'].loc['suv']['mean']"],"execution_count":59,"outputs":[{"output_type":"execute_result","data":{"text/plain":["13.66"]},"metadata":{"tags":[]},"execution_count":59}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9hHPZy9ZIabH","executionInfo":{"status":"ok","timestamp":1623919487394,"user_tz":-540,"elapsed":3,"user":{"displayName":"조현기","photoUrl":"","userId":"02064242295340458415"}},"outputId":"bb54046e-508f-46b6-94f1-a6eb3af8d2b9"},"source":["#결측치가 있는 차종만 뽑았다.\n","#시간이 있다면 이를 dict형으로 만들어서 사용해도 될것 같다.\n","car_class = list(df_remove[df_remove['hwy'].isna()]['class'].values)\n","car_class"],"execution_count":65,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['compact', 'midsize', 'compact', 'pickup', 'compact']"]},"metadata":{"tags":[]},"execution_count":65}]},{"cell_type":"code","metadata":{"id":"j23qQrO2I-Ox"},"source":[""],"execution_count":null,"outputs":[]}]}